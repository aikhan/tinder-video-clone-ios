{
 "kind": "discovery#rpcDescription",
 "etag": "\"zRMgE0l9nVDW4S28VYYcYQF9UW4/ZhIvF7KNJrn8WvdCV-N3VXy9fUA\"",
 "discoveryVersion": "v1",
 "id": "user:v1",
 "name": "user",
 "version": "v1",
 "description": "This should be for movie quotes but it says User",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://final-questor-app.appspot.com/_ah/api/",
 "rpcUrl": "https://final-questor-app.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "User": {
   "id": "User",
   "type": "object",
   "properties": {
    "age": {
     "type": "string",
     "format": "int64"
    },
    "age_high": {
     "type": "string",
     "format": "int64"
    },
    "age_low": {
     "type": "string",
     "format": "int64"
    },
    "age_range": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "int64"
     }
    },
    "bio": {
     "type": "string"
    },
    "confirmation_code": {
     "type": "string"
    },
    "dating": {
     "type": "string",
     "format": "int64"
    },
    "distance_away": {
     "type": "string",
     "format": "int64"
    },
    "distance_of_search": {
     "type": "string",
     "format": "int64"
    },
    "email": {
     "type": "string"
    },
    "entityKey": {
     "type": "string"
    },
    "first_name": {
     "type": "string"
    },
    "gender": {
     "type": "string",
     "format": "int64"
    },
    "lat": {
     "type": "number",
     "format": "double"
    },
    "likedArray": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "liked_you": {
     "type": "string"
    },
    "lon": {
     "type": "number",
     "format": "double"
    },
    "looking_for": {
     "type": "string",
     "format": "int64"
    },
    "matchedArray": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "password": {
     "type": "string"
    },
    "phone_number": {
     "type": "string",
     "format": "int64"
    },
    "profile_gif": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "profile_video_urls": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "skippedArray": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "user_bucket": {
     "type": "string"
    },
    "user_location": {
     "type": "string"
    }
   }
  },
  "UserCollection": {
   "id": "UserCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "User"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  }
 },
 "methods": {
  "user.user.create": {
   "id": "user.user.create",
   "description": "create users as well as update the data",
   "parameters": {
    "resource": {
     "$ref": "User"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "user.user.delete": {
   "id": "user.user.delete",
   "parameters": {
    "entityKey": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "entityKey"
   ],
   "returns": {
    "$ref": "User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "user.user.list": {
   "id": "user.user.list",
   "description": "returns a list of all of the users",
   "allowGet": true,
   "parameters": {
    "age": {
     "type": "string",
     "format": "int64"
    },
    "email": {
     "type": "string"
    },
    "gender": {
     "type": "string",
     "format": "int64"
    },
    "limit": {
     "type": "string",
     "format": "int64"
    },
    "order": {
     "type": "string"
    },
    "pageToken": {
     "type": "string"
    },
    "user_bucket": {
     "type": "string"
    }
   },
   "returns": {
    "$ref": "UserCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
